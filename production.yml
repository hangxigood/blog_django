version: '3'

volumes:
  static_pdct_admin:
  static_pdct_DRF:
  static_pdct_blog:
  database_pdct:
  static_pdct_media:

services:
  web-pdct:
    build:
      context: .
      dockerfile: compose/production/Django/Dockerfile
    image: blog_web_pdct
    container_name: blog-web-pdct # 不能带下划线，不然Django 报错
    environment:
      PROJECT_ENV: product
    working_dir: /blog_project
    volumes:
      - static_pdct_admin:/blog_project/frontend/dist/static/admin
      - static_pdct_DRF:/blog_project/frontend/dist/static/rest_framework
      - static_pdct_blog:/blog_project/frontend/dist/static/blog
      - static_pdct_media:/blog_project/media
    ports:
      - "8000:8000"
    links:
      - database-pdct
      - redis-pdct
    depends_on:
      - database-pdct
      - redis-pdct
    command: /start.sh

  nginx-pdct:
    build:
      context: .
      dockerfile: compose/production/Nginx/Dockerfile
    image: blog_nginx_pdct
    container_name: blog-nginx-pdct
    volumes:
    - static_pdct_admin:/apps/blog_project/dist/static/admin # 共享 Django 的静态文件
    - static_pdct_media:/apps/blog_project/media
    - static_pdct_DRF:/apps/blog_project/dist/static/rest_framework
    - static_pdct_blog:/apps/blog_project/dist/static/blog
    - ./compose/production/certbot/conf:/etc/letsencrypt # certbot 相关
    - ./compose/production/certbot/www:/var/www/certbot
    ports:
    - "80:80"
    - "443:443"
    depends_on:
      - web-pdct
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    volumes:
      - ./compose/production/certbot/conf:/etc/letsencrypt # certbot 相关
      - ./compose/production/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  redis-pdct:
    build:
      context: .
      dockerfile: compose/production/Redis/Dockerfile
    image: blog_redis_pdct
    container_name: blog-redis-pdct
    ports:
      - "6379:6379"

  database-pdct:
    image: mysql:5.7
    container_name: blog-database-pdct
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

    environment:
      TZ: "Asia/Shanghai"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PW}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PW}"

    ports:
      - "3306:3306"
    volumes:
      - database_pdct:/var/lib/mysql
      - ./compose/production/Mysql/my.cnf:/etc/mysql/my.cnf